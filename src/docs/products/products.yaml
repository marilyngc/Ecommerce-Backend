paths:
  /api/products/:
    get:
    #descripcion que hace get
      sumary: all products were obtained 
      tags:
        - Products
      # type of response
      response:
        "200":
          description: all products were taken correctly 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: there was a problem with the server     
  
  
  
  /api/products/{productId}:
    get:
      
    put:
      sumary: the product has been upgraded
      tags:
        - Products
      parameters:
        - name: productId
        in: path
        required: true
        description: id of the product to be updated 
        schema:
          $type: string
      requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#components/requestBodies/createUpdateProduct"   
      # type of response
      responses:
        "200":
          description: product was upgraded     
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UpdateSuccess"
        "500":
          description: there was a problem whith the server         



components:
  schemas:
    Product:
      type: object
      properties:
        _id:
           type: objectId
           description: id generated by data base
        title:
          type: string
          description: Title by product
        category:
          type: string
          description: category by product
        stock:
          type: number
          description: stock by product
        price:
          type: number
          description: price by product 
      example:
        _id: ObjectId:("#536456vfd")
        title: rice
        category: clothe
        stock: 30
        price: 1000
    UpdateSuccess:
      type: object
      properties:
        status: 
                type: string
              message:
                type: string  
      example:
        status: success
        message:    usuario actualizado     
  requestBodies:
    createUser:
      type: object
      properties:
        title:
          type: string
          description: Title by product
        category:
          type: string
          description: category by product
        stock:
          type: number
          description: stock by product
        price:
          type: number
          description: price by product 
      example:
        _id: ObjectId:("#536456vfd")
        title: rice
        category: clothe
        stock: 30
        price: 1000
